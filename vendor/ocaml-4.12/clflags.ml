(**************************************************************************)
(*                                                                        *)
(*                                 OCaml                                  *)
(*                                                                        *)
(*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           *)
(*                                                                        *)
(*   Copyright 1996 Institut National de Recherche en Informatique et     *)
(*     en Automatique.                                                    *)
(*                                                                        *)
(*   All rights reserved.  This file is distributed under the terms of    *)
(*   the GNU Lesser General Public License version 2.1, with the          *)
(*   special exception on linking described in the file LICENSE.          *)
(*                                                                        *)
(**************************************************************************)

let include_dirs = ref ([] : string list)(* -I *)
let debug = ref false                   (* -g *)
let unsafe = ref false                  (* -unsafe *)
let absname = ref false                 (* -absname *)
let use_threads = ref false             (* -thread *)
let open_modules = ref []               (* -open *)
let principal = ref false               (* -principal *)
let recursive_types = ref false         (* -rectypes *)
let applicative_functors = ref true     (* -no-app-funct *)
let for_package = ref (None: string option) (* -for-pack *)
let transparent_modules = ref false     (* -trans-mod *)
let locations = ref true                (* -d(no-)locations *)
let unsafe_string = ref false           (* -safe-string / -unsafe-string *)
let color = ref None (* -color *)
let error_style = ref None (* -error-style *)
let unboxed_types = ref false
